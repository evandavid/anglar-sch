"use strict";angular.module("angularApp",["ngSanitize","ui.router","LocalStorageModule","restangular"]).config(["localStorageServiceProvider","RestangularProvider","$httpProvider",function(a,b,c){var d=window.location.hostname;d="localhost"===d?"":d,a.setPrefix("angular").setStorageType("sessionStorage").setStorageCookieDomain(d),b.setBaseUrl("http://expressnode.azurewebsites.net/api"),c.interceptors.push("APIInterceptor")}]).service("APIInterceptor",["$rootScope","localStorageService","$q","$injector",function(a,b,c,d){var e=this;e.request=function(d){d.params||(d.params={});var e=null;return e=null===a.token||void 0===a.token?b.get("token"):a.token,d.params.token=e,d||c.when(d)},e.responseError=function(a){return 401===a.status||403===a.status?(b.set("token",null),d.get("$state").transitionTo("auth"),c.reject(a)):c.reject(a)},e.response=function(a){return a}}]).run(["$rootScope","$state","$stateParams","Authorization","Cancan","$window",function(a,b,c,d,e,f){a.$on("$stateChangeStart",function(b,c,f){a.toState=c,a.toStateParams=f,a.search=null,a.page=1,e.isIdentityResolved()&&d.authorize()}),a.$on("$stateChangeSuccess",function(){f.scrollTo(0,0)})}]),angular.module("angularApp").config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/dashboard"),b.when("","/dashboard"),a.state("auth",{url:"/login",templateUrl:"views/auth/index.html",controller:"AuthCtrl",controllerAs:"vm"}).state("app",{url:"","abstract":!0,templateUrl:"views/layouts/application.html",controller:"MainCtrl",params:{token:null},resolve:{currentUser:["Cancan",function(a){return a.identity(!0)}]}}).state("app.restricted",{url:"","abstract":!0,templateUrl:"views/layouts/application.html",resolve:{authorize:["Authorization",function(a){return a.authorize()}]}}).state("app.restricted.dashboard",{url:"/dashboard",templateUrl:"views/dashboards/index.html",controllerAs:"vm",data:{roles:["superadmin","user"]}}).state("app.restricted.users",{url:"/users",templateUrl:"views/users/index.html",controller:"UsersCtrl",controllerAs:"vm",data:{roles:["superadmin"]}}).state("app.restricted.services",{url:"/services",templateUrl:"views/services/index.html",controller:"ServicesCtrl",controllerAs:"vm",data:{roles:["superadmin"]}})}]),angular.module("angularApp").controller("AuthCtrl",["$rootScope","Authentication","localStorageService","$state",function(a,b,c,d){function e(){h.logginIn=!h.logginIn}function f(){c.get("token")&&d.go("app.restricted.dashboard")}function g(){e(),h.errorLogin=null,b.authenticate(h.user).then(function(b){a.token=b.token,c.set("token",b.token),console.clear(),d.go("app.restricted.dashboard"),e()},function(a){h.errorLogin=a.data.message,e()})}var h=this;f(),h.doLogin=g}]),angular.module("angularApp").controller("MainCtrl",["$rootScope","currentUser","localStorageService","$state",function(a,b,c,d){a.currentUser=b,a.logout=function(){c.set("token",null),d.go("auth")},a.pageCount=function(a){return Math.ceil(a/10)},a.range=function(a,b,c){c=c||1;for(var d=[],e=a;b>=e;e+=c)d.push(e);return d}}]),angular.module("angularApp").controller("UsersCtrl",["User","Role","$timeout",function(a,b,c){function d(){n.filter={},n.filter.name="",n.filter.username=""}function e(){n.showForm=!0,n.formError=null,n.formSuccess=null}function f(){e()}function g(){n.showForm=!1,n.selectedUser={},n.processing=!1}function h(b){var c=b||!1;n.loadData=!0,c||(n.deleteId=null),a.getAll(n.filter.name,n.filter.username,n.currentPage).then(function(a){n.loadData=!1,n.users=a.users,n.totalPage=a.total})}function i(b){function d(){n.formSuccess=!0,c(function(){g(),h()},600)}n.formError=null,n.processing=!0,b.id?a.update(b).then(function(){d()},function(a){n.formError=a.data.message,n.processing=!1}):a.create(b).then(function(){d()},function(a){n.formError=a.data.message,n.processing=!1})}function j(){b.getAll().then(function(a){n.roles=a.roles})}function k(a){e(),c(function(){n.selectedUser=angular.copy(a),a.Roles&&a.Roles[0]&&(n.selectedUser.roleId=a.Roles[0].id),delete n.selectedUser.Roles})}function l(b){n.deleteId=b,a["delete"](b).then(function(a){a.success&&h(!0)})}function m(){a.undelete(n.deleteId).then(function(a){a.success&&h()})}var n=this;n.selectedUser={},n.selectedUser.isActive=!0,n.currentPage=1,d(),j(),h(),n.undoDelete=m,n.editUser=k,n.getForm=f,n.closeForm=g,n.refresh=h,n.submitForm=i,n.clrFilter=d,n.deleteUser=l}]),angular.module("angularApp").controller("ServicesCtrl",["Service","Role","$timeout",function(a,b,c){function d(a){for(var b=angular.copy(a),c=[],d=2;b.length>0;)c.push(b.splice(0,d));return c}function e(){p.filter={},p.filter.name="",p.filter.username=""}function f(){p.showForm=!0,p.formError=null,p.formSuccess=null}function g(){f()}function h(){p.showForm=!1,p.selectedData={},p.processing=!1}function i(b){var c=b||!1;p.loadData=!0,c||(p.deleteId=null),a.getAll(p.filter.name,p.currentPage).then(function(a){if(p.loadData=!1,p.services=a.services,p.services&&p.services.length)for(var b=0;b<p.services.length;b++)p.services[b].Tasks&&p.services[b].Tasks.length&&(p.services[b].chunkTasks=d(p.services[b].Tasks));p.totalPage=a.total})}function j(b){function d(){p.formSuccess=!0,c(function(){h(),i()},600)}if(p.formError=null,p.processing=!0,!b.isPackage){b.price=0;for(var e=0;e<b.Tasks.length;e++)b.price+=isNaN(parseInt(b.Tasks[e].price))?0:parseInt(b.Tasks[e].price)}b.id?a.update(b).then(function(){d()},function(a){p.formError=a.data.message,p.processing=!1}):a.create(b).then(function(){d()},function(a){p.formError=a.data.message,p.processing=!1})}function k(a){f(),c(function(){p.selectedData=angular.copy(a),delete p.selectedData.Roles})}function l(b){p.deleteId=b,a["delete"](b).then(function(a){a.success&&i(!0)})}function m(){a.undelete(p.deleteId).then(function(a){a.success&&i()})}function n(){p.selectedData.Tasks||(p.selectedData.Tasks=[]),p.selectedData.Tasks.push({name:"",price:0})}function o(a){p.selectedData.Tasks.length&&p.selectedData.Tasks.splice(a,1)}var p=this;p.selectedData={},p.currentPage=1,e(),i(),p.removeTask=o,p.addTask=n,p.undoDelete=m,p.edit=k,p.getForm=g,p.closeForm=h,p.refresh=i,p.submitForm=j,p.clrFilter=e,p["delete"]=l}]),angular.module("angularApp").factory("Authentication",["Restangular",function(a){return{authenticate:function(b){return a.all("authenticate").customPOST(b,null,{},{})}}}]),angular.module("angularApp").factory("Authorization",["$rootScope","$state","Cancan",function(a,b,c){return{authorize:function(){return c.identity().then(function(){var d=c.isAuthenticated();void 0!==a.toState.data&&a.toState.data.roles&&a.toState.data.roles.length>0&&!c.isInAnyRole(a.toState.data.roles)&&(d?b.go("app.restricted.dashboard"):(a.returnToState=a.toState,a.returnToStateParams=a.toStateParams,b.go("auth")))})}}}]),angular.module("angularApp").factory("Cancan",["$q","$http","User",function(a,b,c){var d=void 0,e=!1;return{isIdentityResolved:function(){return angular.isDefined(d)},isAuthenticated:function(){return e},isInRole:function(a){return e&&d.roles?-1!==d.roles.indexOf(a):!1},isInAnyRole:function(a){if(!d)return!1;if(!e||!d.roles)return!1;for(var b=0;b<a.length;b++)if(this.isInRole(a[b]))return!0;return!1},authenticate:function(a){d=a,e=null!==a},identity:function(b){var f=a.defer();return b===!0&&(d=void 0),angular.isDefined(d)?(f.resolve(d),f.promise):(c.me().then(function(a){d=a.user,e=!0,f.resolve(d)},function(){d=null,e=!1,f.resolve(d)}),f.promise)}}}]),angular.module("angularApp").factory("User",["Restangular",function(a){return{me:function(){return a.one("users/me").get()},create:function(b){return a.all("users/create").customPOST({user:b},null,{},{})},update:function(b){return a.all("users/update").customPOST({user:b},null,{},{})},"delete":function(b){return a.all("users").customDELETE("delete?userId="+b,{})},undelete:function(b){return a.all("users/undelete").customPOST({userId:b},null,{},{})},getAll:function(b,c,d){return a.one("users/all?filterName="+b+"&filterUsername="+c+"&page="+d).get()}}}]),angular.module("angularApp").factory("Role",["Restangular",function(a){return{getAll:function(){return a.one("roles/all").get()}}}]),angular.module("angularApp").factory("Service",["Restangular",function(a){return{me:function(){return a.one("services/me").get()},create:function(b){return a.all("services/create").customPOST({service:b},null,{},{})},update:function(b){return a.all("services/update").customPOST({service:b},null,{},{})},"delete":function(b){return a.all("services").customDELETE("delete?id="+b,{})},undelete:function(b){return a.all("services/undelete").customPOST({id:b},null,{},{})},getAll:function(b,c){return a.one("services/all?filterName="+b+"&page="+c).get()}}}]),angular.module("angularApp").run(["$templateCache",function(a){a.put("views/auth/index.html",'<div id="auth"> <div class="ui container"> <div class="ui centered grid"> <div class="seven wide column"> <div class="ui stacked padded segment"> <form class="ui form" novalidate method="post" x-ng-submit="vm.doLogin()"> <h1> Sign In <small ng-bind="vm.errorLogin"></small> </h1> <div class="field"> <label>Username</label> <input type="text" name="username" placeholder="Username" x-ng-model="vm.user.username"> </div> <div class="field"> <label>Password</label> <input type="password" name="password" placeholder="Password" x-ng-model="vm.user.password"> </div> <button class="ui right labeled icon primary button" type="submit" x-ng-class="{loading: vm.logginIn}" x-ng-disabled="vm.logginIn"> <i class="right arrow icon"></i> Sign in </button> </form> </div> </div> </div> </div> </div>'),a.put("views/dashboards/index.html",'<div class="ui main container"> <div class="ui top attached segment"> <h3 class="ui header">Dashboard</h3> </div> <div class="ui bottom attached segment"> <p>Under constraction</p> </div> </div>'),a.put("views/layouts/application.html","<div x-ng-include=\"'views/partials/header.html'\"> </div> <ui-view></ui-view>"),a.put("views/partials/_pagination.html",'<div class="ui right floated pagination menu pagination"> <button class="icon item" x-ng-click="vm.currentPage = vm.currentPage - 1; vm.refresh();" x-ng-disabled="vm.currentPage === 1"> <i class="left chevron icon"></i> </button> <button x-ng-click="vm.currentPage = n; vm.refresh();" class="item" x-ng-if="n == (vm.currentPage) || n == (vm.currentPage+1) || ( vm.currentPage > ($root.pageCount(vm.totalPage)-4) && ( n == ($root.pageCount(vm.totalPage)-2) || n == ($root.pageCount(vm.totalPage)-3) ) ) || n == ($root.pageCount(vm.totalPage)) || n == ($root.pageCount(vm.totalPage)-1)" x-ng-class="{ active: vm.currentPage == n }" x-ng-repeat="n in $root.range(1,$root.pageCount(vm.totalPage))"> {{n}} </button> <button class="icon item" x-ng-click="vm.currentPage = vm.currentPage + 1; vm.refresh();" x-ng-disabled="vm.currentPage == $root.pageCount(vm.totalPage) || vm.totalPage == 0"> <i class="right chevron icon"></i> </button> </div>'),a.put("views/partials/header.html",'<div class="ui fixed inverted menu"> <div class="ui container"> <a href="#" class="header item"> <img class="logo" src="images/logo.d6658ee9.png" style="margin-right: 10px"> Whatever project </a> <a ui-sref="app.restricted.dashboard" ui-sref-active="active" class="item"> <i class="dashboard icon"></i> Dashboard </a> <a ui-sref="app.restricted.users" ui-sref-active="active" class="item"> <i class="users icon"></i> Users </a> <a ui-sref="app.restricted.services" ui-sref-active="active" class="item"> <i class="checkmark box icon"></i> Services </a> <a href="#" class="item"> <i class="suitcase icon"></i> Jobs </a> <a href="#" class="item"> <i class="calendar icon"></i> Calendar </a> <div class="ui simple dropdown item right"> Hi &nbsp; <span x-ng-bind="$root.currentUser.name"></span> <i class="dropdown icon"></i> <div class="menu"> <a class="item" href="" x-ng-click="$root.logout()">Logout</a> </div> </div> </div> </div>'),a.put("views/services/_filter.html",'<form class="ui form" style="margin-bottom: 10px" x-ng-submit="vm.refresh()"> <div class="field"> <label>Name</label> <input type="text" name="first-name" placeholder="Name" x-ng-disabled="vm.showForm" x-ng-model="vm.filter.name"> </div> <div class="field"> <button class="ui button" type="reset" x-ng-disabled="vm.showForm" x-ng-click="vm.clrFilter()"> Clear </button> <button class="ui blue right labeled icon button" x-ng-disabled="vm.showForm"> <i class="search icon"></i> Filter </button> </div> </form>'),a.put("views/services/_form.html",'<div class="ui grey padded top attached segment"> <h4 class="ui header"> <span x-ng-if="!vm.selectedData.id">Create </span> <span x-ng-if="vm.selectedData.id">Update </span> Service</h4> </div> <div class="ui bottom padded attached segment"> <div class="ui negative message" x-ng-if="vm.formError"> <div class="header"> We\'re sorry, we cannot submit service. </div> <ol> <li x-ng-repeat="error in vm.formError">{{error.message}}</li> </ol> </div> <div class="ui positive message" x-ng-if="vm.formSuccess"> <div class="header"> Service successfully submitted. </div> <p>You will be redirected to service list page.</p> </div> <form class="ui form" style="margin-bottom: 10px" x-ng-submit="vm.submitForm(vm.selectedData)"> <div class="field"> <div class="five wide field"> <label>Name</label> <input type="text" placeholder="Name" x-ng-model="vm.selectedData.name"> </div> </div> <div class="inline field"> <div class="ui checkbox"> <input type="checkbox" x-ng-model="vm.selectedData.isPackage"> <label>Is Package</label> </div> </div> <div class="field" x-ng-show="vm.selectedData.isPackage"> <div class="four wide field"> <label>Price</label> <input type="text" placeholder="Price" x-ng-model="vm.selectedData.price"> </div> </div> <div class="field"> <div class="six wide field"> <label>Tasks</label> </div> </div> <div class="fields" style="margin-bottom: -15px"> <div class="six wide field"> <label>Task Name</label> </div> <div class="four wide field"> <label>Task Price</label> </div> <div class="four wide field"> <label>&nbsp</label> </div> </div> <div class="fields" x-ng-repeat="task in vm.selectedData.Tasks"> <div class="six wide field"> <input type="text" placeholder="Task Name" x-ng-model="task.name"> </div> <div class="four wide field"> <input type="text" placeholder="Task Price" x-ng-model="task.price"> </div> <div class="four wide field"> <div class="ui red labeled icon button" x-ng-click="vm.removeTask($index)"> <i class="trash icon"></i> Remove </div> </div> </div> <div class="field"> <div class="ui right labeled icon button" x-ng-click="vm.addTask()"> <i class="save icon"></i> Add task </div> </div> <br> <div class="field"> <button class="ui button" x-ng-click="vm.closeForm()"> Cancel </button> <button class="ui blue right labeled icon button" x-ng-class="{loading: vm.processing}" x-ng-disabled="vm.processing"> <i class="save icon"></i> Submit </button> </div> </form> </div>'),a.put("views/services/_list.html",'<table class="ui single line table"> <thead> <tr> <th>Name</th> <th>Tasks</th> <th>Created At</th> <th>Price</th> <th>Package?</th> <th>Actions</th> </tr> </thead> <tbody> <tr x-ng-repeat="service in vm.services"> <td>{{service.name}}</td> <td> <span x-ng-repeat="tasks in service.chunkTasks"> <a class="ui blue label" x-ng-repeat="task in tasks" x-ng-bind="task.name"></a> <div style="margin-bottom: 5px" x-ng-hide="$last"></div> </span> </td> <td>{{service.createdAt | date:\'dd MMMM yyyy HH:mm\'}}</td> <td>{{(service.price | currency:\'Rp \':0).replace(\',\', \'.\')}}</td> <td>{{service.isPackage?\'Yes\':\'No\'}}</td> <td> <a href="" x-ng-click="vm.edit(service)">Edit</a> | <a href="" x-ng-click="vm.delete(service.id)">Delete</a> </td> </tr> </tbody> <tfoot> <tr> <th> <div class="ui small inline loader" x-ng-class="{active: vm.loadData}"></div> </th> <th colspan="5"> <div x-ng-include="\'views/partials/_pagination.html\'"></div> </th> </tr> </tfoot> </table>'),a.put("views/services/index.html",'<div class="ui padded main container"> <div class="ui grid"> <div class="four wide column"> <div class="ui top attached segment"> <div class="ui relaxed list"> <div class="item"> <div class="ui avatar image page title"> <i class="checkmark box icon"></i> </div> <div class="content"> <a class="header">Services</a> <div class="description">Manage Services</div> </div> </div> <button class="title refresh action" title="Add new user" x-ng-click="vm.refresh()" x-ng-disabled="vm.showForm"> <i class="refresh icon"></i> </button> <button class="title action" title="Add new user" x-ng-click="vm.getForm()" x-ng-disabled="vm.showForm"> <i class="add icon"></i> </button> </div> </div> <div x-ng-include="\'views/services/_filter.html\'" class="ui bottom attached segment"></div> </div> <div class="twelve wide column"> <div x-ng-include="\'views/services/_list.html\'" x-ng-if="!vm.showForm"></div> <div x-ng-include="\'views/services/_form.html\'" x-ng-if="vm.showForm"></div> </div> </div> </div> <div class="ui warning message undo" ng-if="vm.deleteId"> <div class="ui padded container"> <div class="header">Service deleted</div> <p>You just successfully delete a service. <a href="" x-ng-click="vm.undoDelete()">Undo</a></p> </div> </div>'),a.put("views/users/_filter.html",'<form class="ui form" style="margin-bottom: 10px" x-ng-submit="vm.refresh()"> <div class="field"> <label>Name</label> <input type="text" name="first-name" placeholder="Name" x-ng-disabled="vm.showForm" x-ng-model="vm.filter.name"> </div> <div class="field"> <label>Username</label> <input type="text" name="last-name" placeholder="Username" x-ng-disabled="vm.showForm" x-ng-model="vm.filter.username"> </div> <div class="field"> <button class="ui button" type="reset" x-ng-disabled="vm.showForm" x-ng-click="vm.clrFilter()"> Clear </button> <button class="ui blue right labeled icon button" x-ng-disabled="vm.showForm"> <i class="search icon"></i> Filter </button> </div> </form>'),a.put("views/users/_form.html",'<div class="ui grey padded top attached segment"> <h4 class="ui header"> <span x-ng-if="!vm.selectedUser.id">Create </span> <span x-ng-if="vm.selectedUser.id">Update </span> User</h4> </div> <div class="ui bottom padded attached segment"> <div class="ui negative message" x-ng-if="vm.formError"> <div class="header"> We\'re sorry, we cannot submit user. </div> <ol> <li x-ng-repeat="error in vm.formError">{{error.message}}</li> </ol> </div> <div class="ui positive message" x-ng-if="vm.formSuccess"> <div class="header"> User successfully submitted. </div> <p>You will be redirected to user list page.</p> </div> <form class="ui form" style="margin-bottom: 10px" x-ng-submit="vm.submitForm(vm.selectedUser)"> <div class="field"> <div class="four wide field"> <label>Username</label> <input type="text" placeholder="Name" x-ng-model="vm.selectedUser.username"> </div> </div> <div class="field"> <div class="six wide field"> <label>Name</label> <input type="text" placeholder="Username" x-ng-model="vm.selectedUser.name"> </div> </div> <div class="field"> <div class="six wide field"> <label>Password</label> <input type="password" placeholder="Password" x-ng-model="vm.selectedUser.password"> </div> </div> <div class="field"> <div class="eight wide field"> <label>Role</label> <select x-ng-model="vm.selectedUser.roleId"> <option value="">Select role</option> <option x-ng-repeat="role in vm.roles" value="{{role.id}}" x-ng-selected="role.id == vm.selectedUser.roleId">{{role.name}}</option> </select> </div> </div> <div class="inline field"> <div class="ui checkbox"> <input type="checkbox" x-ng-model="vm.selectedUser.isActive"> <label>Is Active</label> </div> </div> <div class="field"> <button class="ui button" x-ng-click="vm.closeForm()"> Cancel </button> <button class="ui blue right labeled icon button" x-ng-class="{loading: vm.processing}" x-ng-disabled="vm.processing"> <i class="save icon"></i> Submit </button> </div> </form> </div>'),a.put("views/users/_list.html",'<table class="ui single line table"> <thead> <tr> <th>Name</th> <th>Username</th> <th>Created At</th> <th>Role</th> <th>Active</th> <th>Actions</th> </tr> </thead> <tbody> <tr x-ng-repeat="user in vm.users"> <td>{{user.name}}</td> <td>{{user.username}}</td> <td>{{user.createdAt | date:\'dd MMMM yyyy HH:mm\'}}</td> <td>{{user.Roles[0].name}}</td> <td>{{user.isActive?\'Yes\':\'No\'}}</td> <td> <a href="" x-ng-click="vm.editUser(user)">Edit</a> <span x-ng-if="$root.currentUser.id != user.id">| <a href="" x-ng-click="vm.deleteUser(user.id)">Delete</a></span> </td> </tr> </tbody> <tfoot> <tr> <th> <div class="ui small inline loader" x-ng-class="{active: vm.loadData}"></div> </th> <th colspan="5"> <div x-ng-include="\'views/partials/_pagination.html\'"></div> </th> </tr> </tfoot> </table>'),a.put("views/users/index.html",'<div class="ui padded main container"> <div class="ui grid"> <div class="four wide column"> <div class="ui top attached segment"> <div class="ui relaxed list"> <div class="item"> <div class="ui avatar image page title"> <i class="users icon"></i> </div> <div class="content"> <a class="header">Users</a> <div class="description">User management</div> </div> </div> <button class="title refresh action" title="Add new user" x-ng-click="vm.refresh()" x-ng-disabled="vm.showForm"> <i class="refresh icon"></i> </button> <button class="title action" title="Add new user" x-ng-click="vm.getForm()" x-ng-disabled="vm.showForm"> <i class="add icon"></i> </button> </div> </div> <div x-ng-include="\'views/users/_filter.html\'" class="ui bottom attached segment"></div> </div> <div class="twelve wide column"> <div x-ng-include="\'views/users/_list.html\'" x-ng-if="!vm.showForm"></div> <div x-ng-include="\'views/users/_form.html\'" x-ng-if="vm.showForm"></div> </div> </div> </div> <div class="ui warning message undo" ng-if="vm.deleteId"> <div class="ui padded container"> <div class="header">User deleted</div> <p>User successfully deleted. <a href="" x-ng-click="vm.undoDelete()">Undo</a></p> </div> </div>')}]);